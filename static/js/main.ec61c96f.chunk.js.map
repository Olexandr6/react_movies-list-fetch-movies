{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","request","url","a","fetch","response","ok","Error","status","statusText","json","getMovieByTitle","title","Response","FindMovie","onAddMovie","useState","setMovie","setTitle","wasMovieFound","setWasMovieFound","loadMovie","findedMovie","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","role","App","SetMovies","movieToAdd","find","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec61c96f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com';\n\nexport async function request(url: string) {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\nexport async function getMovieByTitle(title: string): Promise<Movie> {\n  const movie = await request(`${BASE_URL}/?apikey=ef976414&t=${title}`);\n\n  if (movie.Response === 'False') {\n    throw new Error(`Error: ${movie.Error}`);\n  }\n\n  return movie;\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getMovieByTitle } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  onAddMovie: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [wasMovieFound, setWasMovieFound] = useState(true);\n\n  const loadMovie = async () => {\n    try {\n      const findedMovie = await getMovieByTitle(title);\n\n      setMovie(findedMovie);\n    } catch (error) {\n      setMovie(null);\n      setWasMovieFound(false);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setWasMovieFound(true);\n    setTitle(value);\n  };\n\n  const handleFindButton = () => {\n    loadMovie();\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitle('');\n\n    if (movie) {\n      onAddMovie(movie);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              onChange={handleInputChange}\n              className={classNames('input', {\n                'is-danger': !wasMovieFound,\n              })}\n            />\n          </div>\n\n          {!wasMovieFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} /> }\n        {!wasMovieFound && (\n          <div className=\"alert alert-warning\" role=\"alert\">\n            Movie not found\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC<{}> = () => {\n  const [movies, SetMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movieToAdd: Movie) => {\n    const isMovieAlreadyAdded = movies.find(movie => movie.imdbID === movieToAdd.imdbID);\n\n    if (!isMovieAlreadyAdded) {\n      SetMovies(currentMovies => [...currentMovies, movieToAdd]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}